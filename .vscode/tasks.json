{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Debug Container",
            "type": "shell",
            "command": "ENABLE_DEBUGPY=1 docker compose up --build",
            "isBackground": true,
            "problemMatcher": {
                "pattern": {
                    "regexp": "^.*$",
                    "file": 1,
                    "location": 2,
                    "message": 3
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": ".*Starting debug processes.*",
                    "endsPattern": ".*âœ… Debugpy is ready on both ports.*"
                }
            }
        },
        {
            "label": "Wait for Debug Ports",
            "type": "shell",
            "command": "for i in {1..45}; do if nc -z localhost 5678 && nc -z localhost 5679; then exit 0; fi; echo \"Waiting for debugpy to be ready (attempt $i/45)...\"; sleep 1; done; exit 1",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        },
        {
            "label": "Start Debug Environment",
            "dependsOrder": "sequence",
            "dependsOn": ["Start Debug Container", "Wait for Debug Ports"],
            "problemMatcher": []
        },
        {
            "label": "Stop Debug Container",
            "type": "shell",
            "command": "docker compose down -t 0",
            "presentation": {
                "reveal": "silent",
                "panel": "new"
            },
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "label": "End Debugging Session",
            "type": "shell",
            "command": "docker compose down -t 0 && sleep 1 && killall -9 node",
            "presentation": {
                "reveal": "silent",
                "panel": "new"
            },
            "group": {
                "kind": "test",
                "isDefault": true
            }
        }
    ]
}

  